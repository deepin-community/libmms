Description: Hide internal symbols
Author: Sebastian Ramacher <sramacher@debian.org>
Last-Update: 2015-11-15

--- a/src/uri.h
+++ b/src/uri.h
@@ -61,38 +61,38 @@
 
 
 
-GURI*     gnet_uri_new (const char* uri);
+GURI*     gnet_uri_new (const char* uri) __attribute__((visibility("hidden")));
 GURI*     gnet_uri_new_fields (const char* scheme, const char* hostname, 
-			       const gint port, const char* path);
+			       const gint port, const char* path) __attribute__((visibility("hidden")));
 GURI*
 gnet_uri_new_fields_all (const char* scheme, const char* user, 
 			 const char* passwd, const char* hostname,
 			 const gint port, const char* path, 
-			 const char* query, const char* fragment);
-GURI*     gnet_uri_clone (const GURI* uri);
-void      gnet_uri_delete (GURI* uri);
+			 const char* query, const char* fragment) __attribute__((visibility("hidden")));
+GURI*     gnet_uri_clone (const GURI* uri) __attribute__((visibility("hidden")));
+void      gnet_uri_delete (GURI* uri) __attribute__((visibility("hidden")));
 	       
-gboolean  gnet_uri_equal (gconstpointer p1, gconstpointer p2);
+gboolean  gnet_uri_equal (gconstpointer p1, gconstpointer p2) __attribute__((visibility("hidden")));
 #if 0 /* removing due to real glib dependence, but unneeded by libmms */
 guint     gnet_uri_hash (gconstpointer p);
 #endif
 
-void	  gnet_uri_escape (GURI* uri);
-void	  gnet_uri_unescape (GURI* uri);
+void	  gnet_uri_escape (GURI* uri) __attribute__((visibility("hidden")));
+void	  gnet_uri_unescape (GURI* uri) __attribute__((visibility("hidden")));
 
 #if 0 /* removing due to real glib dependence, but unneeded by libmms */
 char* 	  gnet_uri_get_string (const GURI* uri);
 #endif
 
-void 	  gnet_uri_set_scheme   (GURI* uri, const char* scheme);
-void 	  gnet_uri_set_userinfo (GURI* uri, const char* user, const char* passwd);
-void 	  gnet_uri_set_hostname (GURI* uri, const char* hostname);
-void 	  gnet_uri_set_port     (GURI* uri, gint port);
-void 	  gnet_uri_set_path	(GURI* uri, const char* path);
-void 	  gnet_uri_set_query 	(GURI* uri, const char* query);
-void 	  gnet_uri_set_fragment (GURI* uri, const char* fragment);
+void 	  gnet_uri_set_scheme   (GURI* uri, const char* scheme) __attribute__((visibility("hidden")));
+void 	  gnet_uri_set_userinfo (GURI* uri, const char* user, const char* passwd) __attribute__((visibility("hidden")));
+void 	  gnet_uri_set_hostname (GURI* uri, const char* hostname) __attribute__((visibility("hidden")));
+void 	  gnet_uri_set_port     (GURI* uri, gint port) __attribute__((visibility("hidden")));
+void 	  gnet_uri_set_path	(GURI* uri, const char* path) __attribute__((visibility("hidden")));
+void 	  gnet_uri_set_query 	(GURI* uri, const char* query) __attribute__((visibility("hidden")));
+void 	  gnet_uri_set_fragment (GURI* uri, const char* fragment) __attribute__((visibility("hidden")));
 
-char*     gnet_mms_helper(const GURI* uri, int make_absolute);
+char*     gnet_mms_helper(const GURI* uri, int make_absolute) __attribute__((visibility("hidden")));
 
 #ifdef __cplusplus
 }
--- a/src/mms.c
+++ b/src/mms.c
@@ -627,7 +627,7 @@
   guid[36] = '\0';
 }
 
-const char *status_to_string(int status)
+static const char *status_to_string(int status)
 {
   switch (status) {
   case 0x80070003:
--- a/src/utf.h
+++ b/src/utf.h
@@ -30,7 +30,7 @@
 extern "C" {
 #endif /* __cplusplus */
 
-int mms_utf8_to_utf16le(char* dest, size_t dest_size, const char* str);
+int mms_utf8_to_utf16le(char* dest, size_t dest_size, const char* str) __attribute__((visibility("hidden")));
 
 #ifdef __cplusplus
 }
